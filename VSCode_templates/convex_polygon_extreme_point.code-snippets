{
    "tranxuanbach": {
        "prefix": "convex_polygon_extreme_point",
        "body": [
            "// Returns a point with the maximum inner product with p",
            "// Assumes the polygon is not empty",
            "// Requires point and convex_polygon",
            "// O(log(n))",
            "template<class T>",
            "int convex_polygon_extreme_point(const convex_polygon<T> &c, const point<T> &p){",
            "\tassert(!c.empty());",
            "\tauto q = p.perp();",
            "\tif((int)c.size() == 1 || (c[0] - c.back() ^ q) >= 0 && (q ^ c[1] - c[0]) >= 0) return 0;",
            "\tint low = 0, high = (int)c.size() - 1;",
            "\twhile(high - low >= 2){",
            "\t\tint mid = low + (high - low >> 1);",
            "\t\t(is_sorted_by_angle(point<T>(), c[low + 1] - c[low], c[mid + 1] - c[mid], q) ? low : high) = mid;",
            "\t}",
            "\treturn high;",
            "}"
        ],
        "description": "tranxuanbach"
    }
}