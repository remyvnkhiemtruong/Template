{
    "tranxuanbach": {
        "prefix": "int128_augmentation",
        "body": [
            "istream &operator>>(istream &in, __int128_t &x){",
            "\tchar s[40];",
            "\tin >> s;",
            "\tx = 0;",
            "\tfor(int i = s[0] == '-'; s[i]; ++ i) x = x * 10 + s[i] - '0';",
            "\tif(s[0] == '-') x = -x;",
            "\treturn in;",
            "}",
            "ostream &operator<<(ostream &out, __int128_t x){",
            "\tif(!x) return out << 0;",
            "\tif(x < 0) out << \"-\", x = -x;",
            "\tconstexpr int block = 1e9;",
            "\tarray<int, 6> a{};",
            "\tint it = 0;",
            "\tfor(; x; x /= block) a[it ++] = x % block;",
            "\tfor(-- it; it >= 0; -- it) out << a[it];",
            "\treturn out;",
            "}",
            "__int128_t abs(__int128_t x){",
            "\treturn x >= 0 ? x : -x;",
            "}",
            "istream &operator>>(istream &in, __uint128_t &x){",
            "\tchar s[40];",
            "\tin >> s;",
            "\tx = 0;",
            "\tfor(int i = s[0] == '-'; s[i]; ++ i) x = x * 10 + s[i] - '0';",
            "\tif(s[0] == '-') x = -x;",
            "\treturn in;",
            "}",
            "ostream &operator<<(ostream &out, __uint128_t x){",
            "\tif(!x) return out << 0;",
            "\tconstexpr int block = 1e9;",
            "\tarray<int, 6> a{};",
            "\tint it = 0;",
            "\tfor(; x; x /= block) a[it ++] = x % block;",
            "\tfor(-- it; it >= 0; -- it) out << a[it];",
            "\treturn out;",
            "}",
            "__int128_t gcd(__int128_t x, __int128_t y){",
            "\tfor(x = abs(x), y = abs(y); y; swap(x, y)) x %= y;",
            "\treturn x;",
            "}",
            "__int128_t lcm(__int128_t x, __int128_t y){",
            "\treturn x / gcd(x, y) * y;",
            "}",
            "__uint128_t gcd(__uint128_t x, __uint128_t y){",
            "\tfor(; y; swap(x, y)) x %= y;",
            "\treturn x;",
            "}",
            "__uint128_t lcm(__uint128_t x, __uint128_t y){",
            "\treturn x / gcd(x, y) * y;",
            "}"
        ],
        "description": "tranxuanbach"
    }
}