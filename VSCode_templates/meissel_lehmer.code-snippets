{
    "tranxuanbach": {
        "prefix": "meissel_lehmer",
        "body": [
            "template<class NT, class T>",
            "struct meissel_lehmer{ // NT is the number_theory class",
            "\tconst int maxx = 1e2 + 5, maxy = 1e5 + 5, maxn = 1e7 + 5;",
            "\tvector<int> cn;",
            "\tvector<T> sum;",
            "\tvector<vector<T>> f;",
            "\tNT &nt;",
            "\tT F(long long x){ // A multiplicative function",
            "\t\treturn 1;",
            "\t}",
            "\tT sum_F(long long x){ // Prefix sum of F up to x",
            "\t\treturn x;",
            "\t}",
            "\tmeissel_lehmer(NT &nt): nt(nt), sum(maxn), f(maxx, vector<T>(maxy)), cn(maxn){",
            "\t\tfor(int i = 2, cnt = 0; i < maxn; ++ i){",
            "\t\t\tsum[i] = sum[i - 1];",
            "\t\t\tif(nt.lpf[i] == i) sum[i] += F(i), ++ cnt;",
            "\t\t\tcn[i] = cnt;",
            "\t\t}",
            "\t\tfor(int i = 0; i < maxx; ++ i) for(int j = 0; j < maxy; ++ j){",
            "\t\t\tf[i][j] = i ? f[i - 1][j] - f[i - 1][j / nt.prime[i - 1]] * F(nt.prime[i - 1]) : sum_F(j);",
            "\t\t}",
            "\t} // O(n^(2/3 + eps)) time and O(n^(1/3 + eps)) space for all eps>0",
            "\tT legendre_sum(long long m, int n){",
            "\t\tif(!n) return sum_F(m);",
            "\t\tif(m <= nt.prime[n - 1]) return F(1);",
            "\t\tif(m < maxy && n < maxx) return f[n][m];",
            "\t\treturn legendre_sum(m, n - 1) - legendre_sum(m / nt.prime[n - 1], n - 1) * F(nt.prime[n - 1]);",
            "\t}",
            "\tT pi(long long m){ // Calculate sum of F(p) for primes up to m",
            "\t\tif(m <= maxn) return sum[m];",
            "\t\tint x = sqrt(m + 0.9), y = cbrt(m + 0.9), a = cn[y];",
            "\t\tT res = legendre_sum(m, a) - F(1) + sum[y];",
            "\t\tfor(int i = a; nt.prime[i] <= x; ++ i) res -= (pi(m / nt.prime[i]) - pi(nt.prime[i] - 1)) * F(nt.prime[i]);",
            "\t\treturn res;",
            "\t} // O(n^(2/3 + eps)) time and O(n^(1/3 + eps)) space for all eps>0",
            "};"
        ],
        "description": "tranxuanbach"
    }
}