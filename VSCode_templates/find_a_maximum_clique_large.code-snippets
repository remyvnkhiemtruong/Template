{
    "tranxuanbach": {
        "prefix": "find_a_maximum_clique_large",
        "body": [
            "// Bron-Kerbosch algorithm",
            "// Reads adjacency matrix represented with bitmask",
            "// O(3^(n/3))",
            "template<int SZ>",
            "vector<int> find_a_maximum_clique_large(const vector<bitset<SZ>> &input_adjm){",
            "\tint n = (int)input_adjm.size();",
            "\tassert(1 <= n);",
            "\tvector<int> deg(n), order(n), pos(n);",
            "\tfor(auto u = 0; u < n; ++ u) deg[u] = input_adjm[u].count();",
            "\tiota(order.begin(), order.end(), 0);",
            "\tsort(order.begin(), order.end(), [&](int u, int v){ return deg[u] < deg[v]; });",
            "\tfor(auto t = 0; t < n; ++ t) pos[order[t]] = t;",
            "\tusing bs = bitset<SZ>;",
            "\tvector<bs> adjm(n);",
            "\tfor(auto u = 0; u < n; ++ u) for(auto v = u + 1; v < n; ++ v) if(input_adjm[u][v]) adjm[pos[u]].set(pos[v]), adjm[pos[v]].set(pos[u]);",
            "\tbs res;",
            "\tauto dfs = [&](auto self, bs r, bs p)->void{",
            "\t\tif(p == 0){",
            "\t\t\tif(res.count() < r.count()) res = r;",
            "\t\t\treturn;",
            "\t\t}",
            "\t\tif((r | p).count() <= res.count()) return;",
            "\t\tint u = p._Find_first();",
            "\t\tbs c = p & ~adjm[u];",
            "\t\twhile(c.count()){",
            "\t\t\tu = c._Find_first();",
            "\t\t\tbs umask;",
            "\t\t\tumask.set(u);",
            "\t\t\tr |= umask;",
            "\t\t\tself(self, r, p & adjm[u]);",
            "\t\t\tr &= ~umask;",
            "\t\t\tp &= ~umask;",
            "\t\t\tc ^= umask;",
            "\t\t}",
            "\t};",
            "\tbs p;",
            "\tfor(auto u = 0; u < n; ++ u) p.set(u);",
            "\tdfs(dfs, {}, p);",
            "\tvector<int> clique;",
            "\tfor(auto t = 0; t < n; ++ t) if(res[t]) clique.push_back(order[t]);",
            "\tsort(clique.begin(), clique.end());",
            "\treturn clique;",
            "}"
        ],
        "description": "tranxuanbach"
    }
}