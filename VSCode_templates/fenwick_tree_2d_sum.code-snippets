{
    "tranxuanbach": {
        "prefix": "fenwick_tree_2d_sum",
        "body": [
            "template<class T>",
            "struct fenwick_tree_2d_sum{",
            "\tint n, m;",
            "\tvector<vector<T>> data;",
            "\t// O(n * m)",
            "\tfenwick_tree_2d_sum(const vector<vector<T>> &a): n((int)a.size()), m((int)a[0].size()), data(a){",
            "\t\tfor(auto i = 1; i <= n; ++ i) if(i + (i & -i) <= n) for(auto j = 1; j <= m; ++ j) data[i + (i & -i) - 1][j - 1] += data[i - 1][j - 1];",
            "\t\tfor(auto i = 1; i <= n; ++ i) for(auto j = 1; j <= m; ++ j) if(j + (j & -j) <= m) data[i - 1][j + (j & -j) - 1] += data[i - 1][j - 1];",
            "\t}",
            "\t// O(n * m)",
            "\tfenwick_tree_2d_sum(int n, int m): n(n), m(m), data(n, vector<T>(m)){}",
            "\t// a[p][q] += x",
            "\t// O(log(n) * log(m))",
            "\tvoid update(int p, int q, T x){",
            "\t\tassert(0 <= p && p < n && 0 <= q && q < m);",
            "\t\t++ p, ++ q;",
            "\t\tfor(auto i = p; i <= n; i += i & -i) for(auto j = q; j <= m; j += j & -j) data[i - 1][j - 1] += x;",
            "\t}",
            "\t// Returns the sum of a[i][j] on [0, xr) X [0, yr)",
            "\t// O(log(n) * log(m))",
            "\tT prefix(int xr, int yr){",
            "\t\tassert(0 <= xr && xr <= n && 0 <= yr && yr <= m);",
            "\t\tT res{};",
            "\t\tfor(auto i = xr; i > 0; i -= i & -i) for(auto j = yr; j > 0; j -= j & -j) res += data[i - 1][j - 1];",
            "\t\treturn res;",
            "\t}",
            "\t// Returns the sum of a[i][j] on [xl, xr) X [yl, yr)",
            "\t// O(log(n) * log(m))",
            "\tT query(int xl, int xr, int yl, int yr){",
            "\t\tassert(xl <= xr && yl <= yr);",
            "\t\treturn prefix(xr, yr) - prefix(xr, yl) - prefix(xl, yr) + prefix(xl, yl);",
            "\t}",
            "\t// O(log(n) * log(m))",
            "\tT query(int x, int y){",
            "\t\treturn prefix(x + 1, y + 1) - prefix(x + 1, y) - prefix(x, y + 1) + prefix(x, y);",
            "\t}",
            "\ttemplate<class output_stream>",
            "\tfriend output_stream &operator<<(output_stream &out, const fenwick_tree_2d_sum<T> &fw){",
            "\t\tfor(auto i = 0; i < fw.n; ++ i){",
            "\t\t\tout << \"\\n[\";",
            "\t\t\tfor(auto j = 0; j < fw.m; ++ j){",
            "\t\t\t\tout << fw.query(i, j);",
            "\t\t\t\tif(j != fw.m - 1) out << \", \";",
            "\t\t\t}",
            "\t\t\tout << \"]\\n\";",
            "\t\t}",
            "\t\treturn out;",
            "\t}",
            "};"
        ],
        "description": "tranxuanbach"
    }
}