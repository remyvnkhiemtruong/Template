{
    "tranxuanbach": {
        "prefix": "precalc_directional_heights",
        "body": [
            "// Reads undirected forest",
            "// O(|V|)",
            "template<class T>",
            "array<vector<int>, 2> precalc_directional_heights(const graph<T> &g, const vector<int> &roots){",
            "\tint n = g.n;",
            "\tvector<int> vis(n);",
            "\tvector<T> height_up(n), height_down(n);",
            "\tauto dfs_up = [&](auto self, int u)->void{",
            "\t\tvis[u] = true;",
            "\t\tfor(auto id: g.adj[u]){",
            "\t\t\tif(g.ignore && g.ignore(id)) continue;",
            "\t\t\tauto &e = g.edge[id];",
            "\t\t\tint v = g(u, id);",
            "\t\t\tif(vis[v]) continue;",
            "\t\t\tself(self, v);",
            "\t\t\theight_up[u] = max(height_up[u], height_up[v] + e.cost);",
            "\t\t}",
            "\t};",
            "\tfor(auto r: roots) if(!vis[r]) dfs_up(dfs_up, r);",
            "\tfill(vis.begin(), vis.end(), false);",
            "\tauto dfs_down = [&](auto self, int u)->void{",
            "\t\tvis[u] = true;",
            "\t\tarray<int, 2> mx{height_down[u], 0};",
            "\t\tfor(auto id: g.adj[u]){",
            "\t\t\tif(g.ignore && g.ignore(id)) continue;",
            "\t\t\tauto &e = g.edge[id];",
            "\t\t\tint v = g(u, id);",
            "\t\t\tif(vis[v]) continue;",
            "\t\t\tif(mx[0] < height_up[v] + e.cost) mx = {height_up[v] + e.cost, mx[0]};",
            "\t\t\telse if(mx[1] < height_up[v] + e.cost) mx[1] = height_up[v] + e.cost;",
            "\t\t}",
            "\t\tfor(auto id: g.adj[u]){",
            "\t\t\tif(g.ignore && g.ignore(id)) continue;",
            "\t\t\tauto &e = g.edge[id];",
            "\t\t\tint v = g(u, id);",
            "\t\t\tif(vis[v]) continue;",
            "\t\t\theight_down[v] = height_up[v] + e.cost != mx[0] ? mx[0] + e.cost : mx[1] + e.cost;",
            "\t\t\tself(self, v);",
            "\t\t}",
            "\t};",
            "\tfor(auto r: roots) if(!vis[r]) dfs_down(dfs_down, r);",
            "\treturn {height_up, height_down};",
            "}"
        ],
        "description": "tranxuanbach"
    }
}