{
    "tranxuanbach": {
        "prefix": "succinct_dictionary",
        "body": [
            "struct succinct_dictionary{",
            "\tstatic constexpr unsigned int wsize = 64;",
            "\tstatic unsigned int rank64(unsigned long long x, unsigned int i){",
            "\t\treturn __builtin_popcountll(x & ((1ULL << i) - 1));",
            "\t}",
            "#pragma pack(4)",
            "\tstruct block_t{",
            "\t\tunsigned long long bit;",
            "\t\tunsigned int sum;",
            "\t};",
            "#pragma pack()",
            "\tunsigned int n, zeros;",
            "\tvector<block_t> block;",
            "\tsuccinct_dictionary(unsigned int n = 0) : n(n), block(n / wsize + 1){}",
            "\t// O(1)",
            "\tint operator[](unsigned int i) const{",
            "\t\treturn block[i / wsize].bit >> i % wsize & 1;",
            "\t}",
            "\t// O(1)",
            "\tvoid set(unsigned int i){",
            "\t\tblock[i / wsize].bit |= 1ULL << i % wsize;",
            "\t}",
            "\t// O(n/w)",
            "\tvoid build(){",
            "\t\tfor(auto i = 0; i < n / wsize; ++ i) block[i + 1].sum = block[i].sum + __builtin_popcountll(block[i].bit);",
            "\t\tzeros = rank0(n);",
            "\t}",
            "\t// O(1)",
            "\tunsigned int rank0(unsigned int i) const{",
            "\t\treturn i - rank1(i);",
            "\t}",
            "\t// O(1)",
            "\tunsigned int rank1(unsigned int i) const{",
            "\t\tauto &&e = block[i / wsize];",
            "\t\treturn e.sum + rank64(e.bit, i % wsize);",
            "\t}",
            "\t// O(log(n))",
            "\tunsigned int select0(unsigned int k) const{",
            "\t\tunsigned int low = 0, high = n;",
            "\t\twhile(high - low >= 2){",
            "\t\t\tunsigned int mid = low + high >> 1;",
            "\t\t\t(rank0(mid) <= k ? low : high) = mid;",
            "\t\t}",
            "\t\treturn low;",
            "\t}",
            "\t// O(log(n))",
            "\tunsigned int select1(unsigned int k) const{",
            "\t\tunsigned int low = 0, high = n;",
            "\t\twhile(high - low >= 2){",
            "\t\t\tunsigned int mid = low + high >> 1;",
            "\t\t\t(rank1(mid) <= k ? low : high) = mid;",
            "\t\t}",
            "\t\treturn low;",
            "\t}",
            "};"
        ],
        "description": "tranxuanbach"
    }
}