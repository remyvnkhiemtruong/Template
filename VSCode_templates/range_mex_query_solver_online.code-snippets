{
    "tranxuanbach": {
        "prefix": "range_mex_query_solver_online",
        "body": [
            "struct range_mex_query_solver_online{",
            "\tint n;",
            "\tvector<int> a;",
            "\tvector<int> root;",
            "\tvector<int> left;",
            "\tvector<int> right;",
            "\tvector<int> data;",
            "\t// O(n * log(n)) time and memory",
            "\trange_mex_query_solver_online(const vector<int> &a): n((int)a.size()), a(a), root(n){",
            "\t\tfor(auto x: a) assert(x >= 0);",
            "\t\tauto new_state = [&](int l, int r, int x)->int{",
            "\t\t\tleft.push_back(l);",
            "\t\t\tright.push_back(r);",
            "\t\t\tdata.push_back(x);",
            "\t\t\treturn (int)data.size() - 1;",
            "\t\t};",
            "\t\tauto build = [&](auto self, int l, int r)->int{",
            "\t\t\tif(r - l == 1) return new_state(-1, -1, n);",
            "\t\t\tint m = l + (r - l >> 1);",
            "\t\t\tint v = self(self, l, m), w = self(self, m, r);",
            "\t\t\treturn new_state(v, w, n);",
            "\t\t};",
            "\t\tint u = build(build, 0, n + 1);",
            "\t\tfor(auto i = n - 1; i >= 0; -- i){",
            "\t\t\tint x = min(a[i], n);",
            "\t\t\tauto set = [&](auto self, int u, int l, int r)->int{",
            "\t\t\t\tif(r - l == 1) return new_state(-1, -1, i);",
            "\t\t\t\tint m = l + (r - l >> 1), v = left[u], w = right[u];",
            "\t\t\t\tif(x < m) v = self(self, v, l, m);",
            "\t\t\t\telse w = self(self, w, m, r);",
            "\t\t\t\treturn new_state(v, w, max(data[v], data[w]));",
            "\t\t\t};",
            "\t\t\tu = root[i] = set(set, u, 0, n + 1);",
            "\t\t}",
            "\t}",
            "\t// O(log(n))",
            "\tint query(int ql, int qr) const{",
            "\t\tassert(0 <= ql && ql <= qr && qr <= n);",
            "\t\tif(ql == n) return 0;",
            "\t\tint pref = -1;",
            "\t\tauto recurse = [&](auto self, int u, int l, int r)->int{",
            "\t\t\tif(r == 0) return -1;",
            "\t\t\tif(max(pref, data[u]) < qr){",
            "\t\t\t\tpref = max(pref, data[u]);",
            "\t\t\t\treturn -1;",
            "\t\t\t}",
            "\t\t\tif(r - l == 1) return l;",
            "\t\t\tint m = l + (r - l >> 1), p = self(self, left[u], l, m);",
            "\t\t\tif(~p) return p;",
            "\t\t\treturn self(self, right[u], m, r);",
            "\t\t};",
            "\t\tauto res = recurse(recurse, root[ql], 0, n + 1);",
            "\t\tif(!~res) res = n;",
            "\t\treturn res;",
            "\t}",
            "};"
        ],
        "description": "tranxuanbach"
    }
}