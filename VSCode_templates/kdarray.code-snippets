{
    "tranxuanbach": {
        "prefix": "kdarray",
        "body": [
            "template<class T>",
            "struct kdarray{",
            "\tint K;",
            "\tvector<int> n, p;",
            "\tvector<T> val;",
            "\tT &operator[](const vector<int> &x){",
            "\t\tint pos = 0;",
            "\t\tfor(int i = 0; i < int(x.size()); ++ i) pos += p[i] * x[i];",
            "\t\treturn val[pos];",
            "\t}",
            "\tkdarray(){}",
            "\tkdarray(const vector<int> &n, T id = T()): K(int(n.size())), n(n), val(accumulate(n.begin(), n.end(), 1, multiplies<>()), id), p(K + 1, 1){",
            "\t\tpartial_sum(n.begin(), n.end(), p.begin() + 1, multiplies<>());",
            "\t}",
            "\ttemplate<class U>",
            "\tkdarray(const kdarray<U> &arr): K(arr.K), n(arr.n), p(arr.p), val(arr.val.begin(), arr.val.end()){ }",
            "};",
            "template<class T>",
            "istream &operator>>(istream &in, kdarray<T> &arr){",
            "\tfor(vector<int> i(arr.K); in >> arr[i]; ){",
            "\t\tfor(int d = arr.K - 1; d >= 0; -- d){",
            "\t\t\tif(++ i[d] < arr.n[d]) break;",
            "\t\t\tif(!d) goto ESCAPE;",
            "\t\t\ti[d] = 0;",
            "\t\t}",
            "\t}",
            "\tESCAPE:;",
            "\treturn in;",
            "}",
            "template<class T>",
            "ostream &operator<<(ostream &out, kdarray<T> &arr){",
            "\tfor(vector<int> i(arr.K); true; ){",
            "\t\tout << \"\\n[{\";",
            "\t\tfor(int d = 0; d < arr.K; ++ d){",
            "\t\t\tout << i[d] << \", \";",
            "\t\t}",
            "\t\tif(arr.K) out << \"\\b\\b\";",
            "\t\tout << \"}] -> \";",
            "\t\t// out << arr[i]; // format this part",
            "\t\tfor(int d = arr.K - 1; d >= 0; -- d){",
            "\t\t\tif(++ i[d] < arr.n[d]) break;",
            "\t\t\tif(!d) goto ESCAPE;",
            "\t\t\ti[d] = 0;",
            "\t\t}",
            "\t}",
            "\tESCAPE:;",
            "\treturn out;",
            "}"
        ],
        "description": "tranxuanbach"
    }
}