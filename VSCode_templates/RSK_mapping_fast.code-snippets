{
    "tranxuanbach": {
        "prefix": "RSK_mapping_fast",
        "body": [
            "// Source: https://codeforces.com/blog/entry/98167",
            "// Returns the Robinson-Schensted-Knuth mapping of p",
            "// p must be a permutation",
            "// O(n * sqrt(n) * log(n))",
            "array<vector<vector<int>>, 2> RSK_mapping_fast(vector<int> p){",
            "\tint n = (int)p.size(), k = 1;",
            "\t{ // Check if p is a permutation",
            "\t\tvector<int> flag(n);",
            "\t\tfor(auto x: p){",
            "\t\t\tassert(0 <= x && x < n && !flag[x]);",
            "\t\t\tflag[x] = true;",
            "\t\t}",
            "\t}",
            "\twhile(k * k < n) ++ k;",
            "\tvector<int> inv_p(n);",
            "\tfor(auto i = 0; i < n; ++ i) inv_p[p[i]] = i;",
            "\tauto partial = [&](const vector<int> &p, int k)->vector<vector<int>>{",
            "\t\tvector<vector<int>> s(k);",
            "\t\tfor(auto x: p){",
            "\t\t\tfor(auto i = 0; i < k; ++ i){",
            "\t\t\t\tint j = upper_bound(s[i].begin(), s[i].end(), x) - s[i].begin();",
            "\t\t\t\tif(j >= (int)s[i].size()){",
            "\t\t\t\t\ts[i].push_back(x);",
            "\t\t\t\t\tbreak;",
            "\t\t\t\t}",
            "\t\t\t\tswap(s[i][j], x);",
            "\t\t\t}",
            "\t\t}",
            "\t\twhile(s.back().empty()) s.pop_back();",
            "\t\treturn s;",
            "\t};",
            "\tauto s = partial(p, k), t = partial(inv_p, k);",
            "\treverse(p.begin(), p.end());",
            "\treverse(inv_p.begin(), inv_p.end());",
            "\tauto s_cols = partial(p, k), t_cols = partial(inv_p, k);",
            "\ts.resize(s_cols[0].size()), t.resize(t_cols[0].size());",
            "\tfor(auto i = k; i < (int)s.size(); ++ i) for(auto j = 0; j < (int)s_cols.size() && (int)s_cols[j].size() > i; ++ j) s[i].emplace_back(s_cols[j][i]), t[i].emplace_back(t_cols[j][i]);",
            "\treturn {s, t};",
            "}"
        ],
        "description": "tranxuanbach"
    }
}