{
    "tranxuanbach": {
        "prefix": "find_prefix_xor_order",
        "body": [
            "// Solution to https://codeforces.com/gym/378271/problem/B",
            "// Let f(a) be the array of prefix xors of a",
            "// Return the minimum integer m such that f^m(a) = b, or -1 if there's no such m",
            "// O(n * log(n))",
            "template<class T>",
            "int find_prefix_xor_order(vector<T> a, const vector<T> &b){",
            "\tassert((int)a.size() == (int)b.size());",
            "\tint n = (int)a.size(), s = 0;",
            "\twhile(s < n && !a[s]){",
            "\t\tif(b[s]) return -1;",
            "\t\t++ s;",
            "\t}",
            "\tif(s == n) return 0;",
            "\tif(a[s] != b[s]) return -1;",
            "\tint res = 0;",
            "\tfor(auto bit = 0; s + (1 << bit) <= n; ++ bit){",
            "\t\tif(equal(a.begin() + s + (1 << bit), a.begin() + min(s + (1 << bit + 1), n), b.begin() + s + (1 << bit), b.begin() + min(s + (1 << bit + 1), n))) continue;",
            "\t\tres |= 1 << bit;",
            "\t\tfor(auto i = s + (1 << bit); i < n; ++ i) a[i] ^= a[i - (1 << bit)];",
            "\t\tif(!equal(a.begin() + s + (1 << bit), a.begin() + min(s + (1 << bit + 1), n), b.begin() + s + (1 << bit), b.begin() + min(s + (1 << bit + 1), n))) return -1;",
            "\t}",
            "\treturn res;",
            "}"
        ],
        "description": "tranxuanbach"
    }
}