{
    "tranxuanbach": {
        "prefix": "characteristic_polynomial",
        "body": [
            "// T must be of either integer or modular type",
            "// Returns det(xI - a) if not flip otherwise det(a - xI)",
            "// O(n^3 + n^2 * log(MAXVAL))",
            "template<class T>",
            "vector<T> characteristic_polynomial(vector<vector<T>> M, bool flip = false){",
            "\tif(M.empty()) return {1};",
            "\tint n = (int)M.size();",
            "\tassert(n == (int)M[0].size());",
            "\t// Transform the matrix into a similar upper Hessenberg matrix",
            "\tvector<int> c(n);",
            "\tiota(c.begin(), c.end(), 0);",
            "\tfor(auto i = 0; i < n; ++ i) for(auto j = i + 2; j < n; ++ j) while(M[j][c[i]]){",
            "\t\t\tT t;",
            "\t\tif constexpr(is_integral<T>::value) t = M[i + 1][c[i]] / M[j][c[i]];",
            "\t\telse t = M[i + 1][c[i]].data / M[j][c[i]].data;",
            "\t\tswap(M[j], M[i + 1]);",
            "\t\tswap(c[i + 1], c[j]);",
            "\t\tfor(auto k = i; k < n; ++ k) M[j][c[k]] -= M[i + 1][c[k]] * t;",
            "\t\tfor(auto k = 0; k < n; ++ k) M[k][c[i + 1]] += M[k][c[j]] * t;",
            "\t}",
            "\tvector<vector<T>> dp(n + 1);",
            "\tdp[0] = {1};",
            "\tdp[1] = {-M[0][0], 1};",
            "\tfor(auto i = 1; i < n; ++ i){",
            "\t\tdp[i + 1] = dp[i];",
            "\t\tdp[i + 1].insert(dp[i + 1].begin(), 0);",
            "\t\tfor(auto j = 0; j <= i; ++ j) dp[i + 1][j] -= dp[i][j] * M[i][c[i]];",
            "\t\tT pref = 1, coef;",
            "\t\tfor(auto j = i; j > 0; -- j){",
            "\t\t\tpref *= -M[j][c[j - 1]];",
            "\t\t\tcoef = pref * -M[j - 1][c[i]] * (j - i & 1 ? 1 : -1);",
            "\t\t\tfor(auto k = 0; k < j; ++ k) dp[i + 1][k] += coef * dp[j - 1][k];",
            "\t\t}",
            "\t}",
            "\tauto res = dp[n];",
            "\tif(flip && n & 1) for(auto &x: res) x *= -1;",
            "\treturn res;",
            "}"
        ],
        "description": "tranxuanbach"
    }
}