{
    "tranxuanbach": {
        "prefix": "greedy_coloring",
        "body": [
            "// for each weakly connected components, try finding a coloring such that (color[u] + 1) % C == color[v] for all edges.",
            "// undirected graphs are regarded as its canonical directed representation",
            "// C=1 : returns weakly connected components",
            "// C=2 : returns bipartite colorings",
            "// O(|V| + |E|)",
            "// Requires graph",
            "template<class T, int C = 2>",
            "void greedy_coloring(const graph<T> &g, auto act){",
            "\tint n = g.n;",
            "\tvector<int> was(n, -1);",
            "\tauto rg = g.transpose();",
            "\tfor(auto u = 0; u < n; ++ u){",
            "\t\tif(~was[u]) continue;",
            "\t\tbool perfect = true;",
            "\t\tarray<vector<int>, C> split;",
            "\t\tauto dfs = [&](auto self, int u)->void{",
            "\t\t\tfor(auto id: g.adj[u]){",
            "\t\t\t\tif(g.ignore && g.ignore(id)) continue;",
            "\t\t\t\tauto &e = g.edge[id];",
            "\t\t\t\tint v = u ^ e.from ^ e.to;",
            "\t\t\t\tif(!~was[v]){",
            "\t\t\t\t\tsplit[was[v] = (was[u] + 1) % C].push_back(v);",
            "\t\t\t\t\tself(self, v);",
            "\t\t\t\t}",
            "\t\t\t\telse if(was[v] != (was[u] + 1) % C){",
            "\t\t\t\t\tperfect = false;",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\tfor(auto id: rg.adj[u]){",
            "\t\t\t\tif(rg.ignore && rg.ignore(id)) continue;",
            "\t\t\t\tauto &e = rg.edge[id];",
            "\t\t\t\tint v = u ^ e.from ^ e.to;",
            "\t\t\t\tif(!~was[v]){",
            "\t\t\t\t\tsplit[was[v] = (was[u] + C - 1) % C].push_back(v);",
            "\t\t\t\t\tself(self, v);",
            "\t\t\t\t}",
            "\t\t\t\telse if(was[v] != (was[u] + C - 1) % C){",
            "\t\t\t\t\tperfect = false;",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t};",
            "\t\tsplit[was[u] = 0].push_back(u);",
            "\t\tdfs(dfs, u);",
            "\t\tact(perfect, split);",
            "\t}",
            "}"
        ],
        "description": "tranxuanbach"
    }
}