{
    "tranxuanbach": {
        "prefix": "convex_polyhedra",
        "body": [
            "// Returns the set of indices for each faces",
            "// No four points must be coplanar",
            "// O(n^2)",
            "// Requires point3",
            "template<class T>",
            "vector<array<int, 3>> convex_polyhedra(const vector<point3<T>> &a){",
            "\tstruct PR{",
            "\t\tint a, b;",
            "\t\tvoid ins(int x){ (a == -1 ? a : b) = x; }",
            "\t\tvoid rem(int x){ (a == x ? a : b) = -1; }",
            "\t\tint cnt(){ return (a != -1) + (b != -1); }",
            "\t};",
            "\tstruct F{",
            "\t\tpoint3<T> q;",
            "\t\tint a, b, c;",
            "\t};",
            "\tint n = (int)a.size();",
            "\tvector E(n, vector<PR>(n, {-1, -1}));",
            "\t#define E(x, y) E[f.x][f.y]",
            "\tvector<F> FS;",
            "\tauto mf = [&](int i, int j, int k, int l){",
            "\t\tpoint3<T> q = a[j] - a[i] ^ a[k] - a[i];",
            "\t\tif(q * a[l] > q * a[i]) q = q * -1;",
            "\t\tF f{q, i, j, k};",
            "\t\tE(a, b).ins(k);",
            "\t\tE(a, c).ins(j);",
            "\t\tE(b, c).ins(i);",
            "\t\tFS.push_back(f);",
            "\t};",
            "\tfor(auto i = 0; i < 4; ++ i) for(auto j = i + 1; j < 4; ++ j) for(auto k = j + 1; k < 4; ++ k) mf(i, j, k, 6 - i - j - k);",
            "\tfor(auto i = 4; i < n; ++ i){",
            "\t\tfor(auto j = 0; j < (int)FS.size(); ++ j){",
            "\t\t\tF f = FS[j];",
            "\t\t\tif(f.q * a[i] > f.q * a[f.a]){",
            "\t\t\t\tE(a, b).rem(f.c);",
            "\t\t\t\tE(a, c).rem(f.b);",
            "\t\t\t\tE(b, c).rem(f.a);",
            "\t\t\t\tswap(FS[j --], FS.back());",
            "\t\t\t\tFS.pop_back();",
            "\t\t\t}",
            "\t\t}",
            "\t\tint nw = (int)FS.size();",
            "\t\tfor(auto j = 0; j < nw; ++ j){",
            "\t\t\tF f = FS[j];",
            "\t\t\t#define C(a, b, c) if(E(a, b).cnt() != 2) mf(f.a, f.b, i, f.c)",
            "\t\t\tC(a, b, c);",
            "\t\t\tC(a, c, b);",
            "\t\t\tC(b, c, a);",
            "\t\t}",
            "\t}",
            "\tfor(auto &it: FS) if((a[it.b] - a[it.a] ^ a[it.c] - a[it.a]) * it.q <= 0) swap(it.c, it.b);",
            "\tvector<array<int, 3>> res((int)FS.size());",
            "\tfor(auto i = 0; i < (int)FS.size(); ++ i){",
            "\t\tauto [ignore, a, b, c] = FS[i];",
            "\t\tres[i] = {a, b, c};",
            "\t}",
            "\treturn res;",
            "}"
        ],
        "description": "tranxuanbach"
    }
}