{
    "tranxuanbach": {
        "prefix": "bernoulli_number",
        "body": [
            "// B satisfies",
            "// 0^e + 1^e + ... + (m-1)^e",
            "// = 1/(e+1)( C(e+1,0)*B[0]*m^{e+1} + C(e+1,1)*B[1]*m^e + ... + C(e+1,e)*B[e]*m^1 )",
            "// for all non-negative integer m and e",
            "// Returns {B[0], ..., B[n]}",
            "// O(polymul(n))",
            "// Requires modular, number_theoric_transform, and power_series",
            "template<class T, class FFT = ntt>",
            "vector<T> bernoulli_number(int n){",
            "\tassert(n >= 0);",
            "\tpower_series_base<T, FFT> B(n + 1);",
            "\tT fact = 1;",
            "\tfor(auto x = 2; x <= n + 1; ++ x) fact *= x;",
            "\tB[n] = fact = 1 / fact;",
            "\tfor(auto x = n - 1; x >= 0; -- x) B[x] = fact *= x + 2;",
            "\tB.inplace_inverse(n + 1);",
            "\tfor(auto x = 2; x <= n; ++ x) B[x] *= fact *= x;",
            "\treturn B;",
            "}"
        ],
        "description": "tranxuanbach"
    }
}