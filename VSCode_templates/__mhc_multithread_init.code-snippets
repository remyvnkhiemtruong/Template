{
    "tranxuanbach": {
        "prefix": "mhc_multithread_init",
        "body": [
            "#include <bits/stdc++.h>",
            "// #include <x86intrin.h>",
            "using namespace std;",
            "using namespace numbers;",
            "",
            "",
            "",
            "struct __testcase_t{",
            "\t",
            "\t// Set precomputed variables",
            "\t__testcase_t(){ }",
            "\t$0",
            "\tvoid __input(){",
            "",
            "\t}",
            "\tint __solve(){",
            "",
            "\t\treturn 0;",
            "\t}",
            "\tvoid __output(){",
            "",
            "\t}",
            "};",
            "",
            "int main(){",
            "\tcin.tie(0)->sync_with_stdio(0);",
            "\tcin.exceptions(ios::badbit | ios::failbit);",
            "\tint __tc_cnt;",
            "\tcin >> __tc_cnt;",
            "\tvector __test(__tc_cnt, __testcase_t{});",
            "\tfor(auto __tc_num = 0; __tc_num < __tc_cnt; ++ __tc_num){",
            "\t\t__test[__tc_num].__input();",
            "\t}",
            "\tconst int PARALLEL = 16;",
            "\tauto __run_test = [&](auto self, int l, int r)->void{",
            "\t\tif(r - l == 1){",
            "\t\t\tfor(auto i = l; i < __tc_cnt; i += PARALLEL){",
            "\t\t\t\t__test[i].__solve();",
            "\t\t\t}",
            "\t\t\treturn;",
            "\t\t}",
            "\t\tint m = l + r >> 1;",
            "\t\tauto handle = async(launch::async, self, self, l, m);",
            "\t\tself(self, m, r);",
            "\t\thandle.wait();",
            "\t};",
            "\t__run_test(__run_test, 0, PARALLEL);",
            "\tfor(auto __tc_num = 0; __tc_num < __tc_cnt; ++ __tc_num){",
            "\t\tcout << \"Case #\" << __tc_num + 1 << \": \";",
            "\t\t__test[__tc_num].__output();",
            "\t}",
            "\treturn 0;",
            "}",
            "",
            "/*",
            "",
            "*/",
            "",
            "////////////////////////////////////////////////////////////////////////////////////////",
            "//                                                                                    //",
            "//                                   Coded by Aeren                                   //",
            "//                                                                                    //",
            "////////////////////////////////////////////////////////////////////////////////////////"
        ],
        "description": "tranxuanbach"
    }
}